GAS LISTING /tmp/cc00RFMM.s 			page 1


   1               		.file	"leds.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.stabs	"/media/sda6/home/tevs/src/psyBMW_trunk/avr/BordMonitor/",100,0,2,.Ltext0
  11               		.stabs	"leds.c",100,0,2,.Ltext0
  12               		.text
  13               	.Ltext0:
  14               		.stabs	"gcc2_compiled.",60,0,0,0
  15               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,1,0
  16               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,1,0
  17               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,1,0
  18               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,1,0
  19               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,1,0
  20               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,1,
  21               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,1,0
  22               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,1,0
  23               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,1,0
  24               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,1,0
  25               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,1,0
  26               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,1,0
  27               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,1,0
  28               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,1,0
  29               		.stabs	"void:t(0,15)=(0,15)",128,0,1,0
  30               		.stabs	"leds.h",130,0,0,0
  31               		.stabs	"./include/base.h",130,0,0,0
  32               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/io.h",130,0,0,0
  33               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  34               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/inttypes.h",130,0,0,0
  35               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/stdint.h",130,0,0,0
  36               		.stabs	"int8_t:t(6,1)=(0,10)",128,0,121,0
  37               		.stabs	"uint8_t:t(6,2)=(0,11)",128,0,122,0
  38               		.stabs	"int16_t:t(6,3)=(0,1)",128,0,123,0
  39               		.stabs	"uint16_t:t(6,4)=(0,4)",128,0,124,0
  40               		.stabs	"int32_t:t(6,5)=(0,3)",128,0,125,0
  41               		.stabs	"uint32_t:t(6,6)=(0,5)",128,0,126,0
  42               		.stabs	"int64_t:t(6,7)=(0,6)",128,0,128,0
  43               		.stabs	"uint64_t:t(6,8)=(0,7)",128,0,129,0
  44               		.stabs	"intptr_t:t(6,9)=(6,3)",128,0,142,0
  45               		.stabs	"uintptr_t:t(6,10)=(6,4)",128,0,147,0
  46               		.stabs	"int_least8_t:t(6,11)=(6,1)",128,0,159,0
  47               		.stabs	"uint_least8_t:t(6,12)=(6,2)",128,0,164,0
  48               		.stabs	"int_least16_t:t(6,13)=(6,3)",128,0,169,0
  49               		.stabs	"uint_least16_t:t(6,14)=(6,4)",128,0,174,0
  50               		.stabs	"int_least32_t:t(6,15)=(6,5)",128,0,179,0
  51               		.stabs	"uint_least32_t:t(6,16)=(6,6)",128,0,184,0
  52               		.stabs	"int_least64_t:t(6,17)=(6,7)",128,0,192,0
  53               		.stabs	"uint_least64_t:t(6,18)=(6,8)",128,0,199,0
  54               		.stabs	"int_fast8_t:t(6,19)=(6,1)",128,0,213,0
  55               		.stabs	"uint_fast8_t:t(6,20)=(6,2)",128,0,218,0
  56               		.stabs	"int_fast16_t:t(6,21)=(6,3)",128,0,223,0
  57               		.stabs	"uint_fast16_t:t(6,22)=(6,4)",128,0,228,0
GAS LISTING /tmp/cc00RFMM.s 			page 2


  58               		.stabs	"int_fast32_t:t(6,23)=(6,5)",128,0,233,0
  59               		.stabs	"uint_fast32_t:t(6,24)=(6,6)",128,0,238,0
  60               		.stabs	"int_fast64_t:t(6,25)=(6,7)",128,0,246,0
  61               		.stabs	"uint_fast64_t:t(6,26)=(6,8)",128,0,253,0
  62               		.stabs	"intmax_t:t(6,27)=(6,7)",128,0,273,0
  63               		.stabs	"uintmax_t:t(6,28)=(6,8)",128,0,278,0
  64               		.stabn	162,0,0,0
  65               		.stabs	"int_farptr_t:t(5,1)=(6,5)",128,0,77,0
  66               		.stabs	"uint_farptr_t:t(5,2)=(6,6)",128,0,81,0
  67               		.stabn	162,0,0,0
  68               		.stabn	162,0,0,0
  69               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/fuse.h",130,0,0,0
  70               		.stabs	"__fuse_t:t(7,1)=(7,2)=s2low:(0,11),0,8;high:(0,11),8,8;;",128,0,247,0
  71               		.stabn	162,0,0,0
  72               		.stabn	162,0,0,0
  73               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/stdlib.h",130,0,0,0
  74               		.stabs	"/usr/lib/gcc/avr/4.3.4/include/stddef.h",130,0,0,0
  75               		.stabs	"size_t:t(9,1)=(0,4)",128,0,214,0
  76               		.stabs	"wchar_t:t(9,2)=(0,1)",128,0,326,0
  77               		.stabn	162,0,0,0
  78               		.stabs	"div_t:t(8,1)=(8,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
  79               		.stabs	"ldiv_t:t(8,3)=(8,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
  80               		.stabs	"__compar_fn_t:t(8,5)=(8,6)=*(8,7)=f(0,1)",128,0,80,0
  81               		.stabn	162,0,0,0
  82               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/avr/pgmspace.h",130,0,0,0
  83               		.stabs	"prog_void:t(10,1)=(10,2)=(10,2)",128,0,211,0
  84               		.stabs	"prog_char:t(10,3)=(10,4)=@s8;r(10,4);0;255;",128,0,212,0
  85               		.stabs	"prog_uchar:t(10,5)=(10,4)",128,0,213,0
  86               		.stabs	"prog_int8_t:t(10,6)=(10,7)=(0,10)",128,0,215,0
  87               		.stabs	"prog_uint8_t:t(10,8)=(10,4)",128,0,216,0
  88               		.stabs	"prog_int16_t:t(10,9)=(10,10)=(0,1)",128,0,217,0
  89               		.stabs	"prog_uint16_t:t(10,11)=(10,12)=(0,4)",128,0,218,0
  90               		.stabs	"prog_int32_t:t(10,13)=(10,14)=(0,3)",128,0,219,0
  91               		.stabs	"prog_uint32_t:t(10,15)=(10,16)=(0,5)",128,0,220,0
  92               		.stabs	"prog_int64_t:t(10,17)=(10,18)=(0,6)",128,0,222,0
  93               		.stabs	"prog_uint64_t:t(10,19)=(10,20)=(0,7)",128,0,223,0
  94               		.stabn	162,0,0,0
  95               		.stabs	"ticks_t:t(2,1)=(6,6)",128,0,48,0
  96               		.stabn	162,0,0,0
  97               		.stabn	162,0,0,0
  98               		.stabs	"_LedState:T(0,16)=s5Red:(0,11),0,8;Green:(0,11),8,8;Yellow:(0,11),16,8;Fan:(0,11),24,8;Rad
  99               		.stabs	"LedState:t(0,17)=(0,16)",128,0,35,0
 100               		.stabs	"led_tick:F(0,15)",36,0,84,led_tick
 101               	.global	led_tick
 102               		.type	led_tick, @function
 103               	led_tick:
 104               		.stabd	46,0,0
   0:leds.c        **** #include "leds.h"
   1:leds.c        **** #include <string.h>
   2:leds.c        **** 
   3:leds.c        **** #define R_LED_ON() {PORTC |= (1 << 2);}
   4:leds.c        **** #define R_LED_OFF() {PORTC &= ~(1 << 2);}
   5:leds.c        **** #define R_LED(a) { if(a){ R_LED_ON(); } else{ R_LED_OFF();} }
   6:leds.c        **** 
   7:leds.c        **** #define G_LED_ON() {PORTD |= (1 << 7);}
   8:leds.c        **** #define G_LED_OFF() {PORTD &= ~(1 << 7);}
   9:leds.c        **** #define G_LED(a) {if(a){ G_LED_ON(); }else{ G_LED_OFF();}}
GAS LISTING /tmp/cc00RFMM.s 			page 3


  10:leds.c        **** 
  11:leds.c        **** #define Y_LED_ON() {PORTD |= (1 << 5);}
  12:leds.c        **** #define Y_LED_OFF() {PORTD &= ~(1 << 5);}
  13:leds.c        **** #define Y_LED(a) {if(a){ Y_LED_ON();} else{ Y_LED_OFF();}}
  14:leds.c        **** 
  15:leds.c        **** #define FAN_LED_ON() {PORTD |= (1 << 6);}
  16:leds.c        **** #define FAN_LED_OFF() {PORTD &= ~(1 << 6);}
  17:leds.c        **** #define FAN_LED(a) {if(a){ FAN_LED_ON();} else{ FAN_LED_OFF();}}
  18:leds.c        **** 
  19:leds.c        **** #define RADIO_LED_ON() {PORTC |= (1 << 5);}
  20:leds.c        **** #define RADIO_LED_OFF() {PORTC &= ~(1 << 5);}
  21:leds.c        **** #define RADIO_LED(a) {if(a){ RADIO_LED_ON(); }else{ RADIO_LED_OFF();}}
  22:leds.c        **** 
  23:leds.c        **** //------------------------------------------------------------------------------
  24:leds.c        **** // Current state of the LEDs
  25:leds.c        **** // LED state (flashing pattern, i.e. 0=off, 0b11110000 long on, long off, ... )
  26:leds.c        **** //------------------------------------------------------------------------------
  27:leds.c        **** typedef struct _LedState
  28:leds.c        **** {
  29:leds.c        ****     unsigned char Red;
  30:leds.c        ****     unsigned char Green;
  31:leds.c        ****     unsigned char Yellow;
  32:leds.c        ****     unsigned char Fan;
  33:leds.c        ****     unsigned char Radio;
  34:leds.c        **** }LedState;
  35:leds.c        **** 
  36:leds.c        **** LedState g_LedState;
  37:leds.c        **** 
  38:leds.c        **** 
  39:leds.c        **** //------------------------------------------------------------------------------
  40:leds.c        **** void led_init(void)
  41:leds.c        **** {
  42:leds.c        ****     memset(&g_LedState, 0, sizeof(LedState));
  43:leds.c        **** 
  44:leds.c        ****     // RED
  45:leds.c        ****     DDRC |= (1 << DDC2); PORTC &= ~(1 << 2);
  46:leds.c        **** 
  47:leds.c        ****     // GREEN
  48:leds.c        ****     DDRD |= (1 << DDD7); PORTD &= ~(1 << 7);
  49:leds.c        **** 
  50:leds.c        ****     // YELLOW
  51:leds.c        ****     DDRD |= (1 << DDD5); PORTD &= ~(1 << 5);
  52:leds.c        **** 
  53:leds.c        ****     // FAN
  54:leds.c        ****     DDRD |= (1 << DDD6); PORTD &= ~(1 << 6);
  55:leds.c        **** 
  56:leds.c        ****     // RADIO
  57:leds.c        ****     DDRC |= (1 << DDC5); PORTC &= ~(1 << 5);
  58:leds.c        **** 
  59:leds.c        ****     // do small animation to indicate start
  60:leds.c        ****     {
  61:leds.c        ****         G_LED_ON();
  62:leds.c        ****         _delay_ms(500);
  63:leds.c        ****         G_LED_OFF();
  64:leds.c        ****         R_LED_ON();
  65:leds.c        ****         _delay_ms(500);
  66:leds.c        ****         R_LED_OFF();
GAS LISTING /tmp/cc00RFMM.s 			page 4


  67:leds.c        ****         Y_LED_ON();
  68:leds.c        ****         _delay_ms(500);
  69:leds.c        ****         Y_LED_OFF();
  70:leds.c        ****         FAN_LED_ON();
  71:leds.c        ****         _delay_ms(500);
  72:leds.c        ****         FAN_LED_OFF();
  73:leds.c        ****         RADIO_LED_ON();
  74:leds.c        ****         _delay_ms(500);
  75:leds.c        ****         RADIO_LED_OFF();
  76:leds.c        ****         _delay_ms(500);
  77:leds.c        ****     }
  78:leds.c        **** 
  79:leds.c        **** }
  80:leds.c        **** 
  81:leds.c        **** //------------------------------------------------------------------------------
  82:leds.c        **** void led_tick(void)
  83:leds.c        **** {
 105               		.stabn	68,0,84,.LM0-.LFBB1
 106               	.LM0:
 107               	.LFBB1:
 108               	/* prologue: function */
 109               	/* frame size = 0 */
  84:leds.c        ****     // react only every 1/8 second
  85:leds.c        ****     static uint8_t ticks = 0;
  86:leds.c        ****     if (ticks++ < 10) return;
 110               		.stabn	68,0,87,.LM1-.LFBB1
 111               	.LM1:
 112 0000 8091 0000 		lds r24,ticks.1647
 113 0004 8F5F      		subi r24,lo8(-(1))
 114 0006 8093 0000 		sts ticks.1647,r24
 115 000a 8150      		subi r24,lo8(-(-1))
 116 000c 8A30      		cpi r24,lo8(10)
 117 000e 00F4      		brsh .+2
 118 0010 00C0      		rjmp .L13
  87:leds.c        ****     ticks = 0;
 119               		.stabn	68,0,88,.LM2-.LFBB1
 120               	.LM2:
 121 0012 1092 0000 		sts ticks.1647,__zero_reg__
  88:leds.c        **** 
  89:leds.c        ****     // this is our current tick counter
  90:leds.c        ****     static unsigned char tickCounter = 0;
  91:leds.c        **** 
  92:leds.c        ****     if (g_LedState.Red) R_LED(g_LedState.Red & (1 << tickCounter));
 122               		.stabn	68,0,93,.LM3-.LFBB1
 123               	.LM3:
 124 0016 8091 0000 		lds r24,g_LedState
 125 001a 8823      		tst r24
 126 001c 01F0      		breq .L3
 127 001e 90E0      		ldi r25,lo8(0)
 128 0020 0090 0000 		lds r0,tickCounter.1648
 129 0024 00C0      		rjmp 2f
 130 0026 9595      	1:	asr r25
 131 0028 8795      		ror r24
 132 002a 0A94      	2:	dec r0
 133 002c 02F4      		brpl 1b
 134 002e 80FF      		sbrs r24,0
 135 0030 00C0      		rjmp .L4
GAS LISTING /tmp/cc00RFMM.s 			page 5


 136 0032 AA9A      		sbi 53-32,2
 137 0034 00C0      		rjmp .L3
 138               	.L4:
 139 0036 AA98      		cbi 53-32,2
 140               	.L3:
  93:leds.c        ****     if (g_LedState.Green) G_LED(g_LedState.Green & (1 << tickCounter));
 141               		.stabn	68,0,94,.LM4-.LFBB1
 142               	.LM4:
 143 0038 8091 0000 		lds r24,g_LedState+1
 144 003c 8823      		tst r24
 145 003e 01F0      		breq .L5
 146 0040 90E0      		ldi r25,lo8(0)
 147 0042 0090 0000 		lds r0,tickCounter.1648
 148 0046 00C0      		rjmp 2f
 149 0048 9595      	1:	asr r25
 150 004a 8795      		ror r24
 151 004c 0A94      	2:	dec r0
 152 004e 02F4      		brpl 1b
 153 0050 80FF      		sbrs r24,0
 154 0052 00C0      		rjmp .L6
 155 0054 979A      		sbi 50-32,7
 156 0056 00C0      		rjmp .L5
 157               	.L6:
 158 0058 9798      		cbi 50-32,7
 159               	.L5:
  94:leds.c        ****     if (g_LedState.Yellow) Y_LED(g_LedState.Yellow & (1 << tickCounter));
 160               		.stabn	68,0,95,.LM5-.LFBB1
 161               	.LM5:
 162 005a 8091 0000 		lds r24,g_LedState+2
 163 005e 8823      		tst r24
 164 0060 01F0      		breq .L7
 165 0062 90E0      		ldi r25,lo8(0)
 166 0064 0090 0000 		lds r0,tickCounter.1648
 167 0068 00C0      		rjmp 2f
 168 006a 9595      	1:	asr r25
 169 006c 8795      		ror r24
 170 006e 0A94      	2:	dec r0
 171 0070 02F4      		brpl 1b
 172 0072 80FF      		sbrs r24,0
 173 0074 00C0      		rjmp .L8
 174 0076 959A      		sbi 50-32,5
 175 0078 00C0      		rjmp .L7
 176               	.L8:
 177 007a 9598      		cbi 50-32,5
 178               	.L7:
  95:leds.c        ****     if (g_LedState.Fan) FAN_LED(g_LedState.Fan & (1 << tickCounter));
 179               		.stabn	68,0,96,.LM6-.LFBB1
 180               	.LM6:
 181 007c 8091 0000 		lds r24,g_LedState+3
 182 0080 8823      		tst r24
 183 0082 01F0      		breq .L9
 184 0084 90E0      		ldi r25,lo8(0)
 185 0086 0090 0000 		lds r0,tickCounter.1648
 186 008a 00C0      		rjmp 2f
 187 008c 9595      	1:	asr r25
 188 008e 8795      		ror r24
 189 0090 0A94      	2:	dec r0
GAS LISTING /tmp/cc00RFMM.s 			page 6


 190 0092 02F4      		brpl 1b
 191 0094 80FF      		sbrs r24,0
 192 0096 00C0      		rjmp .L10
 193 0098 969A      		sbi 50-32,6
 194 009a 00C0      		rjmp .L9
 195               	.L10:
 196 009c 9698      		cbi 50-32,6
 197               	.L9:
  96:leds.c        ****     if (g_LedState.Radio) RADIO_LED(g_LedState.Radio & (1 << tickCounter));
 198               		.stabn	68,0,97,.LM7-.LFBB1
 199               	.LM7:
 200 009e 8091 0000 		lds r24,g_LedState+4
 201 00a2 8823      		tst r24
 202 00a4 01F0      		breq .L11
 203 00a6 90E0      		ldi r25,lo8(0)
 204 00a8 0090 0000 		lds r0,tickCounter.1648
 205 00ac 00C0      		rjmp 2f
 206 00ae 9595      	1:	asr r25
 207 00b0 8795      		ror r24
 208 00b2 0A94      	2:	dec r0
 209 00b4 02F4      		brpl 1b
 210 00b6 80FF      		sbrs r24,0
 211 00b8 00C0      		rjmp .L12
 212 00ba AD9A      		sbi 53-32,5
 213 00bc 00C0      		rjmp .L11
 214               	.L12:
 215 00be AD98      		cbi 53-32,5
 216               	.L11:
  97:leds.c        **** 
  98:leds.c        ****     // incrementcounter
  99:leds.c        ****     tickCounter++;
 100:leds.c        ****     tickCounter = tickCounter & 7;
 217               		.stabn	68,0,101,.LM8-.LFBB1
 218               	.LM8:
 219 00c0 8091 0000 		lds r24,tickCounter.1648
 220 00c4 8F5F      		subi r24,lo8(-(1))
 221 00c6 8770      		andi r24,lo8(7)
 222 00c8 8093 0000 		sts tickCounter.1648,r24
 223               	.L13:
 224 00cc 0895      		ret
 225               		.size	led_tick, .-led_tick
 226               		.stabs	"ticks:V(6,2)",38,0,86,ticks.1647
 227               		.stabs	"tickCounter:V(0,11)",38,0,91,tickCounter.1648
 228               		.stabn	192,0,0,.LFBB1-.LFBB1
 229               		.stabn	224,0,0,.Lscope1-.LFBB1
 230               	.Lscope1:
 231               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 232               		.stabd	78,0,0
 233               		.stabs	"led_red_set:F(0,15)",36,0,106,led_red_set
 234               		.stabs	"state:P(6,2)",64,0,105,24
 235               	.global	led_red_set
 236               		.type	led_red_set, @function
 237               	led_red_set:
 238               		.stabd	46,0,0
 101:leds.c        **** }
 102:leds.c        **** 
 103:leds.c        **** //------------------------------------------------------------------------------
GAS LISTING /tmp/cc00RFMM.s 			page 7


 104:leds.c        **** void led_red_set(uint8_t state)
 105:leds.c        **** {
 239               		.stabn	68,0,106,.LM9-.LFBB2
 240               	.LM9:
 241               	.LFBB2:
 242               	/* prologue: function */
 243               	/* frame size = 0 */
 106:leds.c        ****     g_LedState.Red = state;
 244               		.stabn	68,0,107,.LM10-.LFBB2
 245               	.LM10:
 246 00ce 8093 0000 		sts g_LedState,r24
 247               	/* epilogue start */
 107:leds.c        **** }
 248               		.stabn	68,0,108,.LM11-.LFBB2
 249               	.LM11:
 250 00d2 0895      		ret
 251               		.size	led_red_set, .-led_red_set
 252               	.Lscope2:
 253               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 254               		.stabd	78,0,0
 255               		.stabs	"led_green_set:F(0,15)",36,0,111,led_green_set
 256               		.stabs	"state:P(6,2)",64,0,110,24
 257               	.global	led_green_set
 258               		.type	led_green_set, @function
 259               	led_green_set:
 260               		.stabd	46,0,0
 108:leds.c        **** //------------------------------------------------------------------------------
 109:leds.c        **** void led_green_set(uint8_t state)
 110:leds.c        **** {
 261               		.stabn	68,0,111,.LM12-.LFBB3
 262               	.LM12:
 263               	.LFBB3:
 264               	/* prologue: function */
 265               	/* frame size = 0 */
 111:leds.c        ****     g_LedState.Green = state;
 266               		.stabn	68,0,112,.LM13-.LFBB3
 267               	.LM13:
 268 00d4 8093 0000 		sts g_LedState+1,r24
 269               	/* epilogue start */
 112:leds.c        **** }
 270               		.stabn	68,0,113,.LM14-.LFBB3
 271               	.LM14:
 272 00d8 0895      		ret
 273               		.size	led_green_set, .-led_green_set
 274               	.Lscope3:
 275               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 276               		.stabd	78,0,0
 277               		.stabs	"led_yellow_set:F(0,15)",36,0,116,led_yellow_set
 278               		.stabs	"state:P(6,2)",64,0,115,24
 279               	.global	led_yellow_set
 280               		.type	led_yellow_set, @function
 281               	led_yellow_set:
 282               		.stabd	46,0,0
 113:leds.c        **** //------------------------------------------------------------------------------
 114:leds.c        **** void led_yellow_set(uint8_t state)
 115:leds.c        **** {
 283               		.stabn	68,0,116,.LM15-.LFBB4
GAS LISTING /tmp/cc00RFMM.s 			page 8


 284               	.LM15:
 285               	.LFBB4:
 286               	/* prologue: function */
 287               	/* frame size = 0 */
 116:leds.c        ****     g_LedState.Yellow = state;
 288               		.stabn	68,0,117,.LM16-.LFBB4
 289               	.LM16:
 290 00da 8093 0000 		sts g_LedState+2,r24
 291               	/* epilogue start */
 117:leds.c        **** }
 292               		.stabn	68,0,118,.LM17-.LFBB4
 293               	.LM17:
 294 00de 0895      		ret
 295               		.size	led_yellow_set, .-led_yellow_set
 296               	.Lscope4:
 297               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 298               		.stabd	78,0,0
 299               		.stabs	"led_fan_set:F(0,15)",36,0,121,led_fan_set
 300               		.stabs	"state:P(6,2)",64,0,120,24
 301               	.global	led_fan_set
 302               		.type	led_fan_set, @function
 303               	led_fan_set:
 304               		.stabd	46,0,0
 118:leds.c        **** //------------------------------------------------------------------------------
 119:leds.c        **** void led_fan_set(uint8_t state)
 120:leds.c        **** {
 305               		.stabn	68,0,121,.LM18-.LFBB5
 306               	.LM18:
 307               	.LFBB5:
 308               	/* prologue: function */
 309               	/* frame size = 0 */
 121:leds.c        ****     g_LedState.Fan = state;
 310               		.stabn	68,0,122,.LM19-.LFBB5
 311               	.LM19:
 312 00e0 8093 0000 		sts g_LedState+3,r24
 313               	/* epilogue start */
 122:leds.c        **** }
 314               		.stabn	68,0,123,.LM20-.LFBB5
 315               	.LM20:
 316 00e4 0895      		ret
 317               		.size	led_fan_set, .-led_fan_set
 318               	.Lscope5:
 319               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 320               		.stabd	78,0,0
 321               		.stabs	"led_radio_set:F(0,15)",36,0,126,led_radio_set
 322               		.stabs	"state:P(6,2)",64,0,125,24
 323               	.global	led_radio_set
 324               		.type	led_radio_set, @function
 325               	led_radio_set:
 326               		.stabd	46,0,0
 123:leds.c        **** //------------------------------------------------------------------------------
 124:leds.c        **** void led_radio_set(uint8_t state)
 125:leds.c        **** {
 327               		.stabn	68,0,126,.LM21-.LFBB6
 328               	.LM21:
 329               	.LFBB6:
 330               	/* prologue: function */
GAS LISTING /tmp/cc00RFMM.s 			page 9


 331               	/* frame size = 0 */
 126:leds.c        ****     g_LedState.Radio = state;
 332               		.stabn	68,0,127,.LM22-.LFBB6
 333               	.LM22:
 334 00e6 8093 0000 		sts g_LedState+4,r24
 335               	/* epilogue start */
 127:leds.c        **** }
 336               		.stabn	68,0,128,.LM23-.LFBB6
 337               	.LM23:
 338 00ea 0895      		ret
 339               		.size	led_radio_set, .-led_radio_set
 340               	.Lscope6:
 341               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 342               		.stabd	78,0,0
 343               		.stabs	"led_red_immediate_set:F(0,15)",36,0,132,led_red_immediate_set
 344               		.stabs	"state:P(6,2)",64,0,131,24
 345               	.global	led_red_immediate_set
 346               		.type	led_red_immediate_set, @function
 347               	led_red_immediate_set:
 348               		.stabd	46,0,0
 128:leds.c        **** 
 129:leds.c        **** //------------------------------------------------------------------------------
 130:leds.c        **** void led_red_immediate_set(uint8_t state)
 131:leds.c        **** {
 349               		.stabn	68,0,132,.LM24-.LFBB7
 350               	.LM24:
 351               	.LFBB7:
 352               	/* prologue: function */
 353               	/* frame size = 0 */
 132:leds.c        ****     R_LED(state);
 354               		.stabn	68,0,133,.LM25-.LFBB7
 355               	.LM25:
 356 00ec 8823      		tst r24
 357 00ee 01F0      		breq .L25
 358 00f0 AA9A      		sbi 53-32,2
 359 00f2 0895      		ret
 360               	.L25:
 361 00f4 AA98      		cbi 53-32,2
 362 00f6 0895      		ret
 363               		.size	led_red_immediate_set, .-led_red_immediate_set
 364               	.Lscope7:
 365               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 366               		.stabd	78,0,0
 367               		.stabs	"led_green_immediate_set:F(0,15)",36,0,137,led_green_immediate_set
 368               		.stabs	"state:P(6,2)",64,0,136,24
 369               	.global	led_green_immediate_set
 370               		.type	led_green_immediate_set, @function
 371               	led_green_immediate_set:
 372               		.stabd	46,0,0
 133:leds.c        **** }
 134:leds.c        **** //------------------------------------------------------------------------------
 135:leds.c        **** void led_green_immediate_set(uint8_t state)
 136:leds.c        **** {
 373               		.stabn	68,0,137,.LM26-.LFBB8
 374               	.LM26:
 375               	.LFBB8:
 376               	/* prologue: function */
GAS LISTING /tmp/cc00RFMM.s 			page 10


 377               	/* frame size = 0 */
 137:leds.c        ****     G_LED(state);
 378               		.stabn	68,0,138,.LM27-.LFBB8
 379               	.LM27:
 380 00f8 8823      		tst r24
 381 00fa 01F0      		breq .L29
 382 00fc 979A      		sbi 50-32,7
 383 00fe 0895      		ret
 384               	.L29:
 385 0100 9798      		cbi 50-32,7
 386 0102 0895      		ret
 387               		.size	led_green_immediate_set, .-led_green_immediate_set
 388               	.Lscope8:
 389               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 390               		.stabd	78,0,0
 391               		.stabs	"led_yellow_immediate_set:F(0,15)",36,0,142,led_yellow_immediate_set
 392               		.stabs	"state:P(6,2)",64,0,141,24
 393               	.global	led_yellow_immediate_set
 394               		.type	led_yellow_immediate_set, @function
 395               	led_yellow_immediate_set:
 396               		.stabd	46,0,0
 138:leds.c        **** }
 139:leds.c        **** //------------------------------------------------------------------------------
 140:leds.c        **** void led_yellow_immediate_set(uint8_t state)
 141:leds.c        **** {
 397               		.stabn	68,0,142,.LM28-.LFBB9
 398               	.LM28:
 399               	.LFBB9:
 400               	/* prologue: function */
 401               	/* frame size = 0 */
 142:leds.c        ****     Y_LED(state);
 402               		.stabn	68,0,143,.LM29-.LFBB9
 403               	.LM29:
 404 0104 8823      		tst r24
 405 0106 01F0      		breq .L33
 406 0108 959A      		sbi 50-32,5
 407 010a 0895      		ret
 408               	.L33:
 409 010c 9598      		cbi 50-32,5
 410 010e 0895      		ret
 411               		.size	led_yellow_immediate_set, .-led_yellow_immediate_set
 412               	.Lscope9:
 413               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 414               		.stabd	78,0,0
 415               		.stabs	"led_fan_immediate_set:F(0,15)",36,0,147,led_fan_immediate_set
 416               		.stabs	"state:P(6,2)",64,0,146,24
 417               	.global	led_fan_immediate_set
 418               		.type	led_fan_immediate_set, @function
 419               	led_fan_immediate_set:
 420               		.stabd	46,0,0
 143:leds.c        **** }
 144:leds.c        **** //------------------------------------------------------------------------------
 145:leds.c        **** void led_fan_immediate_set(uint8_t state)
 146:leds.c        **** {
 421               		.stabn	68,0,147,.LM30-.LFBB10
 422               	.LM30:
 423               	.LFBB10:
GAS LISTING /tmp/cc00RFMM.s 			page 11


 424               	/* prologue: function */
 425               	/* frame size = 0 */
 147:leds.c        ****     FAN_LED(state);
 426               		.stabn	68,0,148,.LM31-.LFBB10
 427               	.LM31:
 428 0110 8823      		tst r24
 429 0112 01F0      		breq .L37
 430 0114 969A      		sbi 50-32,6
 431 0116 0895      		ret
 432               	.L37:
 433 0118 9698      		cbi 50-32,6
 434 011a 0895      		ret
 435               		.size	led_fan_immediate_set, .-led_fan_immediate_set
 436               	.Lscope10:
 437               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 438               		.stabd	78,0,0
 439               		.stabs	"led_radio_immediate_set:F(0,15)",36,0,152,led_radio_immediate_set
 440               		.stabs	"state:P(6,2)",64,0,151,24
 441               	.global	led_radio_immediate_set
 442               		.type	led_radio_immediate_set, @function
 443               	led_radio_immediate_set:
 444               		.stabd	46,0,0
 148:leds.c        **** }
 149:leds.c        **** //------------------------------------------------------------------------------
 150:leds.c        **** void led_radio_immediate_set(uint8_t state)
 151:leds.c        **** {
 445               		.stabn	68,0,152,.LM32-.LFBB11
 446               	.LM32:
 447               	.LFBB11:
 448               	/* prologue: function */
 449               	/* frame size = 0 */
 152:leds.c        ****     RADIO_LED(state);
 450               		.stabn	68,0,153,.LM33-.LFBB11
 451               	.LM33:
 452 011c 8823      		tst r24
 453 011e 01F0      		breq .L41
 454 0120 AD9A      		sbi 53-32,5
 455 0122 0895      		ret
 456               	.L41:
 457 0124 AD98      		cbi 53-32,5
 458 0126 0895      		ret
 459               		.size	led_radio_immediate_set, .-led_radio_immediate_set
 460               	.Lscope11:
 461               		.stabs	"",36,0,0,.Lscope11-.LFBB11
 462               		.stabd	78,0,0
 463               		.stabs	"led_init:F(0,15)",36,0,42,led_init
 464               	.global	led_init
 465               		.type	led_init, @function
 466               	led_init:
 467               		.stabd	46,0,0
  42:leds.c        **** {
 468               		.stabn	68,0,42,.LM34-.LFBB12
 469               	.LM34:
 470               	.LFBB12:
 471               	/* prologue: function */
 472               	/* frame size = 0 */
  43:leds.c        ****     memset(&g_LedState, 0, sizeof(LedState));
GAS LISTING /tmp/cc00RFMM.s 			page 12


 473               		.stabn	68,0,43,.LM35-.LFBB12
 474               	.LM35:
 475 0128 85E0      		ldi r24,lo8(5)
 476 012a E0E0      		ldi r30,lo8(g_LedState)
 477 012c F0E0      		ldi r31,hi8(g_LedState)
 478 012e DF01      		movw r26,r30
 479 0130 1D92      		st X+,__zero_reg__
 480 0132 8A95      	        dec r24
 481 0134 01F4      		brne .-6
  46:leds.c        ****     DDRC |= (1 << DDC2); PORTC &= ~(1 << 2);
 482               		.stabn	68,0,46,.LM36-.LFBB12
 483               	.LM36:
 484 0136 A29A      		sbi 52-32,2
 485 0138 AA98      		cbi 53-32,2
  49:leds.c        ****     DDRD |= (1 << DDD7); PORTD &= ~(1 << 7);
 486               		.stabn	68,0,49,.LM37-.LFBB12
 487               	.LM37:
 488 013a 8F9A      		sbi 49-32,7
 489 013c 9798      		cbi 50-32,7
  52:leds.c        ****     DDRD |= (1 << DDD5); PORTD &= ~(1 << 5);
 490               		.stabn	68,0,52,.LM38-.LFBB12
 491               	.LM38:
 492 013e 8D9A      		sbi 49-32,5
 493 0140 9598      		cbi 50-32,5
  55:leds.c        ****     DDRD |= (1 << DDD6); PORTD &= ~(1 << 6);
 494               		.stabn	68,0,55,.LM39-.LFBB12
 495               	.LM39:
 496 0142 8E9A      		sbi 49-32,6
 497 0144 9698      		cbi 50-32,6
  58:leds.c        ****     DDRC |= (1 << DDC5); PORTC &= ~(1 << 5);
 498               		.stabn	68,0,58,.LM40-.LFBB12
 499               	.LM40:
 500 0146 A59A      		sbi 52-32,5
 501 0148 AD98      		cbi 53-32,5
  62:leds.c        ****         G_LED_ON();
 502               		.stabn	68,0,62,.LM41-.LFBB12
 503               	.LM41:
 504 014a 979A      		sbi 50-32,7
 505 014c 88E8      		ldi r24,lo8(5000)
 506 014e 93E1      		ldi r25,hi8(5000)
 507               	.LBB42:
 508               	.LBB43:
 509               	.LBB44:
 510               	.LBB45:
 511               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext1
 512               	.Ltext1:
   0:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   1:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   2:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    All rights reserved.
   3:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
   4:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
   7:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  10:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
GAS LISTING /tmp/cc00RFMM.s 			page 13


  11:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  13:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      distribution.
  14:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  15:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  18:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  19:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  30:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  31:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  32:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  33:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  34:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  35:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  36:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  37:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  38:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \file */
  39:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  40:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     \code
  41:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  42:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     \endcode
  43:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  44:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  45:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  46:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  47:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  48:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  49:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  50:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  51:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  52:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  53:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  54:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  55:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  56:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  57:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     to the overall delay time.
  58:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  59:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  60:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  61:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** */
  62:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  63:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  64:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  65:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  66:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #endif
  67:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
GAS LISTING /tmp/cc00RFMM.s 			page 14


  68:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  69:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  70:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  71:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  72:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  73:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  74:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     register.
  75:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  76:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  77:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     can be achieved.
  78:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** */
  79:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** void
  80:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  81:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** {
  82:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  84:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  85:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  86:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  87:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	);
  88:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** }
  89:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  90:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  91:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  92:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  93:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  94:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  95:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  96:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     counter register pair.
  97:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  98:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
  99:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 100:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****  */
 101:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** void
 102:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 103:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** {
 104:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 513               		.stabn	68,0,105,.LM42-.LFBB12
 514               	.LM42:
 515 0150 20E7      		ldi r18,lo8(368)
 516 0152 31E0      		ldi r19,hi8(368)
 517               	.L45:
 518 0154 F901      		movw r30,r18
 519               	/* #APP */
 520               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 521 0156 3197      		1: sbiw r30,1
 522 0158 01F4      		brne 1b
 523               	 ;  0 "" 2
 524               	/* #NOAPP */
 525               	.LBE45:
 526               	.LBE44:
 527               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h",132,0,0,.Ltext2
 528               	.Ltext2:
   0:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   1:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   2:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   3:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    All rights reserved.
GAS LISTING /tmp/cc00RFMM.s 			page 15


   4:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
   5:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
   8:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  11:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  14:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      distribution.
  15:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  16:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  18:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  19:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  20:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  32:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5.2.1 2009/02/25 10:14:03 joerg_wunsch Exp $ */
  33:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  34:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  35:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  36:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  37:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #include <inttypes.h>
  38:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  39:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  40:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /** \file */
  41:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  42:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     \code
  43:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  44:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  45:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  46:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     \endcode
  47:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  48:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  49:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  50:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  51:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     used.
  52:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  53:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  54:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  55:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  56:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  57:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  58:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  59:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  60:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
GAS LISTING /tmp/cc00RFMM.s 			page 16


  61:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  62:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  63:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  64:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  65:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  66:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  67:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  68:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  69:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     routines linked into the application.
  70:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  71:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  72:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  73:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  74:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  75:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** */
  76:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  77:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  78:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  79:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  80:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #endif
  81:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  82:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #ifndef F_CPU
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  84:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  85:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  86:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  89:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  90:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #endif
  91:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  92:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /**
  93:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    \ingroup util_delay
  94:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  95:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
  96:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  97:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  98:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
  99:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
 100:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 101:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
 102:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 103:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 104:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 105:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 106:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 107:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****  */
 108:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** void
 109:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 110:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** {
 111:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 112:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
 113:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 114:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		__ticks = 1;
 115:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 116:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 	{
 117:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
GAS LISTING /tmp/cc00RFMM.s 			page 17


 118:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 119:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		while(__ticks)
 120:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		{
 121:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 			// wait 1/10 ms
 122:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 123:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 			__ticks --;
 529               		.stabn	68,0,124,.LM43-.LFBB12
 530               	.LM43:
 531 015a 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		while(__ticks)
 532               		.stabn	68,0,120,.LM44-.LFBB12
 533               	.LM44:
 534 015c 01F4      		brne .L45
 535               	.LBE43:
 536               	.LBE42:
 537               		.stabs	"leds.c",132,0,0,.Ltext3
 538               	.Ltext3:
  64:leds.c        ****         G_LED_OFF();
 539               		.stabn	68,0,64,.LM45-.LFBB12
 540               	.LM45:
 541 015e 9798      		cbi 50-32,7
  65:leds.c        ****         R_LED_ON();
 542               		.stabn	68,0,65,.LM46-.LFBB12
 543               	.LM46:
 544 0160 AA9A      		sbi 53-32,2
 545 0162 88E8      		ldi r24,lo8(5000)
 546 0164 93E1      		ldi r25,hi8(5000)
 547               	.LBB46:
 548               	.LBB47:
 549               	.LBB48:
 550               	.LBB49:
 551               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext4
 552               	.Ltext4:
 553               		.stabn	68,0,105,.LM47-.LFBB12
 554               	.LM47:
 555 0166 20E7      		ldi r18,lo8(368)
 556 0168 31E0      		ldi r19,hi8(368)
 557               	.L46:
 558 016a F901      		movw r30,r18
 559               	/* #APP */
 560               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 561 016c 3197      		1: sbiw r30,1
 562 016e 01F4      		brne 1b
 563               	 ;  0 "" 2
 564               	/* #NOAPP */
 565               	.LBE49:
 566               	.LBE48:
 567               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h",132,0,0,.Ltext5
 568               	.Ltext5:
 569               		.stabn	68,0,124,.LM48-.LFBB12
 570               	.LM48:
 571 0170 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		while(__ticks)
 572               		.stabn	68,0,120,.LM49-.LFBB12
 573               	.LM49:
 574 0172 01F4      		brne .L46
 575               	.LBE47:
GAS LISTING /tmp/cc00RFMM.s 			page 18


 576               	.LBE46:
 577               		.stabs	"leds.c",132,0,0,.Ltext6
 578               	.Ltext6:
  67:leds.c        ****         R_LED_OFF();
 579               		.stabn	68,0,67,.LM50-.LFBB12
 580               	.LM50:
 581 0174 AA98      		cbi 53-32,2
  68:leds.c        ****         Y_LED_ON();
 582               		.stabn	68,0,68,.LM51-.LFBB12
 583               	.LM51:
 584 0176 959A      		sbi 50-32,5
 585 0178 88E8      		ldi r24,lo8(5000)
 586 017a 93E1      		ldi r25,hi8(5000)
 587               	.LBB50:
 588               	.LBB51:
 589               	.LBB52:
 590               	.LBB53:
 591               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext7
 592               	.Ltext7:
 593               		.stabn	68,0,105,.LM52-.LFBB12
 594               	.LM52:
 595 017c 20E7      		ldi r18,lo8(368)
 596 017e 31E0      		ldi r19,hi8(368)
 597               	.L47:
 598 0180 F901      		movw r30,r18
 599               	/* #APP */
 600               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 601 0182 3197      		1: sbiw r30,1
 602 0184 01F4      		brne 1b
 603               	 ;  0 "" 2
 604               	/* #NOAPP */
 605               	.LBE53:
 606               	.LBE52:
 607               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h",132,0,0,.Ltext8
 608               	.Ltext8:
 609               		.stabn	68,0,124,.LM53-.LFBB12
 610               	.LM53:
 611 0186 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		while(__ticks)
 612               		.stabn	68,0,120,.LM54-.LFBB12
 613               	.LM54:
 614 0188 01F4      		brne .L47
 615               	.LBE51:
 616               	.LBE50:
 617               		.stabs	"leds.c",132,0,0,.Ltext9
 618               	.Ltext9:
  70:leds.c        ****         Y_LED_OFF();
 619               		.stabn	68,0,70,.LM55-.LFBB12
 620               	.LM55:
 621 018a 9598      		cbi 50-32,5
  71:leds.c        ****         FAN_LED_ON();
 622               		.stabn	68,0,71,.LM56-.LFBB12
 623               	.LM56:
 624 018c 969A      		sbi 50-32,6
 625 018e 88E8      		ldi r24,lo8(5000)
 626 0190 93E1      		ldi r25,hi8(5000)
 627               	.LBB54:
GAS LISTING /tmp/cc00RFMM.s 			page 19


 628               	.LBB55:
 629               	.LBB56:
 630               	.LBB57:
 631               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext10
 632               	.Ltext10:
 633               		.stabn	68,0,105,.LM57-.LFBB12
 634               	.LM57:
 635 0192 20E7      		ldi r18,lo8(368)
 636 0194 31E0      		ldi r19,hi8(368)
 637               	.L48:
 638 0196 F901      		movw r30,r18
 639               	/* #APP */
 640               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 641 0198 3197      		1: sbiw r30,1
 642 019a 01F4      		brne 1b
 643               	 ;  0 "" 2
 644               	/* #NOAPP */
 645               	.LBE57:
 646               	.LBE56:
 647               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h",132,0,0,.Ltext11
 648               	.Ltext11:
 649               		.stabn	68,0,124,.LM58-.LFBB12
 650               	.LM58:
 651 019c 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		while(__ticks)
 652               		.stabn	68,0,120,.LM59-.LFBB12
 653               	.LM59:
 654 019e 01F4      		brne .L48
 655               	.LBE55:
 656               	.LBE54:
 657               		.stabs	"leds.c",132,0,0,.Ltext12
 658               	.Ltext12:
  73:leds.c        ****         FAN_LED_OFF();
 659               		.stabn	68,0,73,.LM60-.LFBB12
 660               	.LM60:
 661 01a0 9698      		cbi 50-32,6
  74:leds.c        ****         RADIO_LED_ON();
 662               		.stabn	68,0,74,.LM61-.LFBB12
 663               	.LM61:
 664 01a2 AD9A      		sbi 53-32,5
 665 01a4 88E8      		ldi r24,lo8(5000)
 666 01a6 93E1      		ldi r25,hi8(5000)
 667               	.LBB58:
 668               	.LBB59:
 669               	.LBB60:
 670               	.LBB61:
 671               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext13
 672               	.Ltext13:
 673               		.stabn	68,0,105,.LM62-.LFBB12
 674               	.LM62:
 675 01a8 20E7      		ldi r18,lo8(368)
 676 01aa 31E0      		ldi r19,hi8(368)
 677               	.L49:
 678 01ac F901      		movw r30,r18
 679               	/* #APP */
 680               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 681 01ae 3197      		1: sbiw r30,1
GAS LISTING /tmp/cc00RFMM.s 			page 20


 682 01b0 01F4      		brne 1b
 683               	 ;  0 "" 2
 684               	/* #NOAPP */
 685               	.LBE61:
 686               	.LBE60:
 687               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h",132,0,0,.Ltext14
 688               	.Ltext14:
 689               		.stabn	68,0,124,.LM63-.LFBB12
 690               	.LM63:
 691 01b2 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		while(__ticks)
 692               		.stabn	68,0,120,.LM64-.LFBB12
 693               	.LM64:
 694 01b4 01F4      		brne .L49
 695               	.LBE59:
 696               	.LBE58:
 697               		.stabs	"leds.c",132,0,0,.Ltext15
 698               	.Ltext15:
  76:leds.c        ****         RADIO_LED_OFF();
 699               		.stabn	68,0,76,.LM65-.LFBB12
 700               	.LM65:
 701 01b6 AD98      		cbi 53-32,5
 702 01b8 88E8      		ldi r24,lo8(5000)
 703 01ba 93E1      		ldi r25,hi8(5000)
 704               	.LBB62:
 705               	.LBB63:
 706               	.LBB64:
 707               	.LBB65:
 708               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext16
 709               	.Ltext16:
 710               		.stabn	68,0,105,.LM66-.LFBB12
 711               	.LM66:
 712 01bc 20E7      		ldi r18,lo8(368)
 713 01be 31E0      		ldi r19,hi8(368)
 714               	.L50:
 715 01c0 F901      		movw r30,r18
 716               	/* #APP */
 717               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 718 01c2 3197      		1: sbiw r30,1
 719 01c4 01F4      		brne 1b
 720               	 ;  0 "" 2
 721               	/* #NOAPP */
 722               	.LBE65:
 723               	.LBE64:
 724               		.stabs	"/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h",132,0,0,.Ltext17
 725               	.Ltext17:
 726               		.stabn	68,0,124,.LM67-.LFBB12
 727               	.LM67:
 728 01c6 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		while(__ticks)
 729               		.stabn	68,0,120,.LM68-.LFBB12
 730               	.LM68:
 731 01c8 01F4      		brne .L50
 732               	/* epilogue start */
 733               	.LBE63:
 734               	.LBE62:
 735               		.stabs	"leds.c",132,0,0,.Ltext18
GAS LISTING /tmp/cc00RFMM.s 			page 21


 736               	.Ltext18:
  80:leds.c        **** }
 737               		.stabn	68,0,80,.LM69-.LFBB12
 738               	.LM69:
 739 01ca 0895      		ret
 740               		.size	led_init, .-led_init
 741               		.stabs	"__ticks:r(6,4)",64,0,112,24
 742               		.stabn	192,0,0,.LBB43-.LFBB12
 743               		.stabs	"__count:r(6,4)",64,0,123,30
 744               		.stabn	192,0,0,.LBB44-.LFBB12
 745               		.stabn	224,0,0,.LBE44-.LFBB12
 746               		.stabn	224,0,0,.LBE43-.LFBB12
 747               		.stabs	"__ticks:r(6,4)",64,0,112,24
 748               		.stabn	192,0,0,.LBB47-.LFBB12
 749               		.stabs	"__count:r(6,4)",64,0,123,30
 750               		.stabn	192,0,0,.LBB48-.LFBB12
 751               		.stabn	224,0,0,.LBE48-.LFBB12
 752               		.stabn	224,0,0,.LBE47-.LFBB12
 753               		.stabs	"__ticks:r(6,4)",64,0,112,24
 754               		.stabn	192,0,0,.LBB51-.LFBB12
 755               		.stabs	"__count:r(6,4)",64,0,123,30
 756               		.stabn	192,0,0,.LBB52-.LFBB12
 757               		.stabn	224,0,0,.LBE52-.LFBB12
 758               		.stabn	224,0,0,.LBE51-.LFBB12
 759               		.stabs	"__ticks:r(6,4)",64,0,112,24
 760               		.stabn	192,0,0,.LBB55-.LFBB12
 761               		.stabs	"__count:r(6,4)",64,0,123,30
 762               		.stabn	192,0,0,.LBB56-.LFBB12
 763               		.stabn	224,0,0,.LBE56-.LFBB12
 764               		.stabn	224,0,0,.LBE55-.LFBB12
 765               		.stabs	"__ticks:r(6,4)",64,0,112,24
 766               		.stabn	192,0,0,.LBB59-.LFBB12
 767               		.stabs	"__count:r(6,4)",64,0,123,30
 768               		.stabn	192,0,0,.LBB60-.LFBB12
 769               		.stabn	224,0,0,.LBE60-.LFBB12
 770               		.stabn	224,0,0,.LBE59-.LFBB12
 771               		.stabs	"__ticks:r(6,4)",64,0,112,24
 772               		.stabn	192,0,0,.LBB63-.LFBB12
 773               		.stabs	"__count:r(6,4)",64,0,123,30
 774               		.stabn	192,0,0,.LBB64-.LFBB12
 775               		.stabn	224,0,0,.LBE64-.LFBB12
 776               		.stabn	224,0,0,.LBE63-.LFBB12
 777               	.Lscope12:
 778               		.stabs	"",36,0,0,.Lscope12-.LFBB12
 779               		.stabd	78,0,0
 780               		.lcomm tickCounter.1648,1
 781               		.lcomm ticks.1647,1
 782               		.comm g_LedState,5,1
 783               		.stabs	"ticks:V(6,2)",38,0,86,ticks.1647
 784               		.stabs	"tickCounter:V(0,11)",38,0,91,tickCounter.1648
 785               		.stabs	"g_LedState:G(0,17)",32,0,37,0
 786               		.stabs	"",100,0,0,.Letext0
 787               	.Letext0:
GAS LISTING /tmp/cc00RFMM.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 leds.c
     /tmp/cc00RFMM.s:2      *ABS*:0000003f __SREG__
     /tmp/cc00RFMM.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc00RFMM.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc00RFMM.s:5      *ABS*:00000034 __CCP__
     /tmp/cc00RFMM.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cc00RFMM.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cc00RFMM.s:103    .text:00000000 led_tick
     /tmp/cc00RFMM.s:780    .bss:00000001 ticks.1647
                            *COM*:00000005 g_LedState
                             .bss:00000000 tickCounter.1648
     /tmp/cc00RFMM.s:237    .text:000000ce led_red_set
     /tmp/cc00RFMM.s:259    .text:000000d4 led_green_set
     /tmp/cc00RFMM.s:281    .text:000000da led_yellow_set
     /tmp/cc00RFMM.s:303    .text:000000e0 led_fan_set
     /tmp/cc00RFMM.s:325    .text:000000e6 led_radio_set
     /tmp/cc00RFMM.s:347    .text:000000ec led_red_immediate_set
     /tmp/cc00RFMM.s:371    .text:000000f8 led_green_immediate_set
     /tmp/cc00RFMM.s:395    .text:00000104 led_yellow_immediate_set
     /tmp/cc00RFMM.s:419    .text:00000110 led_fan_immediate_set
     /tmp/cc00RFMM.s:443    .text:0000011c led_radio_immediate_set
     /tmp/cc00RFMM.s:466    .text:00000128 led_init

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
