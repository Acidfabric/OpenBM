Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
                              uart.o (__divmodhi4)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
                              display.o (__eerd_byte_m32)
/usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eewr_byte_atmega32.o)
                              display.o (__eewr_byte_m32)

Allocating common symbols
Common symbol       size              file

g_ibus_TxBuffer     0x100             ibus.o
g_DisplayState      0x2               display.o
g_ibus_MsgCallback  0x2               ibus.o
g_LedState          0x5               leds.o
g_ibus_RxBuffer     0x100             ibus.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libm.a
LOAD main.o
LOAD uart.o
LOAD ibus.o
LOAD twimaster.o
LOAD display.o
LOAD leds.o
LOAD buttons.o
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1636
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_10
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092      0x4b8 main.o
                0x00000092                adc_init
                0x000000be                resetCPU
                0x000000d4                ibus_MessageCallback
                0x000000d6                __vector_16
                0x0000012a                initHardware
                0x00000162                main
 .text          0x0000054a      0x230 uart.o
                0x0000054a                __vector_13
                0x000005c8                __vector_14
                0x0000063e                uart_init
                0x00000678                uart_getc
                0x000006b2                uart_putc
                0x000006d8                uart_startTransmission
                0x000006dc                uart_available
                0x000006f6                uart_flush
                0x00000708                uart_setFormat
                0x0000073e                uart_setTxRx
                0x0000075a                uart_setReceiveCallback
                0x00000764                uart_setTransmitDoneCallback
                0x0000076e                uart_clearTransmissionBuffer
 .text          0x0000077a      0x478 ibus.o
                0x0000077a                ibus_setMessageCallback
                0x00000784                ibus_calcChecksum
                0x000007a6                ibus_recieveCallback
                0x0000085e                ibus_sendMessage
                0x00000956                ibus_transmitCallback
                0x00000986                __vector_9
                0x000009f8                __vector_1
                0x00000a88                ibus_init
                0x00000ad4                ibus_tick
                0x00000bd8                ibus_uartReceiveCallback
 .text          0x00000bf2       0x6e twimaster.o
                0x00000bf2                i2c_init
                0x00000bfa                i2c_start
                0x00000c38                i2c_rep_start
                0x00000c3e                i2c_stop
                0x00000c44                i2c_readAck
                0x00000c52                i2c_readNak
 .text          0x00000c60      0x2a8 display.o
                0x00000c60                display_setInputState
                0x00000c74                display_ToggleInput
                0x00000cb4                display_setPowerState
                0x00000cc8                display_TogglePower
                0x00000d02                display_updateState
                0x00000ee2                display_init
 .text          0x00000f08      0x1cc leds.o
                0x00000f08                led_tick
                0x00000fd6                led_red_set
                0x00000fdc                led_green_set
                0x00000fe2                led_yellow_set
                0x00000fe8                led_fan_set
                0x00000fee                led_radio_set
                0x00000ff4                led_red_immediate_set
                0x00001000                led_green_immediate_set
                0x0000100c                led_yellow_immediate_set
                0x00001018                led_fan_immediate_set
                0x00001024                led_radio_immediate_set
                0x00001030                led_init
 .text          0x000010d4      0x4e6 buttons.o
                0x000010d4                button
                0x000010f8                button_down
                0x0000111c                button_pressed
                0x00001140                button_released
                0x00001164                button_global
                0x00001176                button_global_down
                0x00001188                button_global_pressed
                0x0000119a                button_global_released
                0x000011ac                button_init
                0x00001238                button_tick
 .text          0x000015ba        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
 .text          0x000015ba        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text          0x000015ba        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text          0x000015ba        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .text          0x000015ba        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x000015ba        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
 .text          0x000015ba        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eewr_byte_atmega32.o)
                0x000015ba                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000015ba       0x26 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
                0x000015ba                __divmodhi4
                0x000015ba                _div
 .text.libgcc   0x000015e0        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000015e0        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000015e0        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000015e0       0x28 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
                0x000015e0                __udivmodhi4
 .text.avr-libc
                0x00001608       0x10 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
                0x00001608                __eerd_byte_m32
 .text.avr-libc
                0x00001618       0x1a /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eewr_byte_atmega32.o)
                0x00001618                __eewr_byte_m32
                0x0000161a                __eewr_r18_m32
                0x00001632                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001632        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                0x00001632                exit
                0x00001632                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001632        0x4 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00001636                _etext = .

.data           0x00800060       0x22 load address 0x00001636
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
 .data          0x00800060       0x21 main.o
 .data          0x00800081        0x0 uart.o
 .data          0x00800081        0x0 ibus.o
 .data          0x00800081        0x0 twimaster.o
 .data          0x00800081        0x0 display.o
 .data          0x00800081        0x0 leds.o
 .data          0x00800081        0x0 buttons.o
 .data          0x00800081        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
 .data          0x00800081        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .data          0x00800081        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .data          0x00800081        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .data          0x00800081        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800081        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
 .data          0x00800081        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eewr_byte_atmega32.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800082                . = ALIGN (0x2)
 *fill*         0x00800081        0x1 00
                0x00800082                _edata = .
                0x00800082                PROVIDE (__data_end, .)

.bss            0x00800082      0x35a
                0x00800082                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800082        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
 .bss           0x00800082        0x7 main.o
                0x00800082                g_tickNumber
                0x00800086                g_photoSensor
                0x00800087                g_backLightDimmer
                0x00800088                g_adcCurrentChannel
 .bss           0x00800089      0x119 uart.o
 .bss           0x008001a2        0x6 ibus.o
                0x008001a2                g_ibus_State
                0x008001a3                g_ibus_TxReadPos_old
                0x008001a4                g_ibus_TxReadPos
                0x008001a5                g_ibus_TxWritePos
                0x008001a6                g_ibus_RxPos
                0x008001a7                g_ibus_RxLen
 .bss           0x008001a8        0x0 twimaster.o
 .bss           0x008001a8        0x9 display.o
 .bss           0x008001b1        0x2 leds.o
 .bss           0x008001b3       0x20 buttons.o
                0x008001b3                g_buttons
                0x008001b7                g_buttonsDown
                0x008001bb                g_buttonsPressed
                0x008001bf                g_buttonsRelease
                0x008001c3                g_buttons_last
                0x008001c7                g_buttonsDown_last
                0x008001cb                g_buttonsPressed_last
                0x008001cf                g_buttonsRelease_last
 .bss           0x008001d3        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x008001d3        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .bss           0x008001d3        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .bss           0x008001d3        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .bss           0x008001d3        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x008001d3        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
 .bss           0x008001d3        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eewr_byte_atmega32.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008001d3      0x202 ibus.o
                0x008001d3                g_ibus_TxBuffer
                0x008002d3                g_ibus_MsgCallback
                0x008002d5                g_ibus_RxBuffer
 COMMON         0x008003d5        0x2 display.o
                0x008003d5                g_DisplayState
 COMMON         0x008003d7        0x5 leds.o
                0x008003d7                g_LedState
                0x008003dc                PROVIDE (__bss_end, .)
                0x00001636                __data_load_start = LOADADDR (.data)
                0x00001658                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008003dc        0x0
                0x008003dc                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008003dc                PROVIDE (__noinit_end, .)
                0x008003dc                _end = .
                0x008003dc                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x2
 *(.eeprom*)
 .eeprom        0x00810000        0x2 display.o
                0x00810000                g_eeprom_DisplayState
                0x00810002                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x5004
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o
 .stab          0x000006b4      0xf6c main.o
                                0xf78 (size before relaxing)
 .stab          0x00001620      0x9e4 uart.o
                                0xc60 (size before relaxing)
 .stab          0x00002004      0xc24 ibus.o
                                0xedc (size before relaxing)
 .stab          0x00002c28      0x444 twimaster.o
                                0x6f0 (size before relaxing)
 .stab          0x0000306c      0xb40 display.o
                                0xe28 (size before relaxing)
 .stab          0x00003bac      0xa5c leds.o
                                0xd14 (size before relaxing)
 .stab          0x00004608      0x894 buttons.o
                                0xb7c (size before relaxing)
 .stab          0x00004e9c       0x90 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
                                 0x9c (size before relaxing)
 .stab          0x00004f2c       0xd8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a(eewr_byte_atmega32.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000     0x1afb
 *(.stabstr)
 .stabstr       0x00000000     0x1afb /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(bmwMonitor.out elf32-avr)
LOAD linker stubs
